{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/packages/ui/src/ArtNFTLogo.tsx"],"sourcesContent":["import type React from 'react';\n\ninterface ArtNFTLogoProps {\n  className?: string;\n  size?: 'small' | 'medium' | 'large';\n}\n\nconst ArtNFTLogo: React.FC<ArtNFTLogoProps> = ({ className, size = 'medium' }) => {\n  let textSizeClass = 'text-4xl';\n  if (size === 'small') {\n    textSizeClass = 'text-2xl';\n  } else if (size === 'large') {\n    textSizeClass = 'text-6xl';\n  }\n\n  return (\n    <div className={`font-headline font-bold ${textSizeClass} ${className}`}>\n      <span className=\"text-primary\">Art</span>\n      <span className=\"text-accent\">NFT</span>\n    </div>\n  );\n};\n\nexport default ArtNFTLogo;\n"],"names":[],"mappings":";;;;;AAOA,MAAM,aAAwC,CAAC,EAAE,SAAS,EAAE,OAAO,QAAQ,EAAE;IAC3E,IAAI,gBAAgB;IACpB,IAAI,SAAS,SAAS;QACpB,gBAAgB;IAClB,OAAO,IAAI,SAAS,SAAS;QAC3B,gBAAgB;IAClB;IAEA,qBACE,8OAAC;QAAI,WAAW,CAAC,wBAAwB,EAAE,cAAc,CAAC,EAAE,WAAW;;0BACrE,8OAAC;gBAAK,WAAU;0BAAe;;;;;;0BAC/B,8OAAC;gBAAK,WAAU;0BAAc;;;;;;;;;;;;AAGpC;uCAEe","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/apps/web/src/components/ui/progress.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@utils\"; // Changed from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AACA;;;;;;AAHA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,GACT,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/apps/web/src/app/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport ArtNFTLogo from '@ui/ArtNFTLogo'; // Updated import path\nimport { Loader2, Sparkles } from 'lucide-react';\nimport { Progress } from '@/components/ui/progress'; \n\nconst SPLASH_DURATION = 3000; \nconst PROGRESS_UPDATE_INTERVAL = 100; \n\nexport default function SplashScreen() {\n  const router = useRouter();\n  const [isMounted, setIsMounted] = useState(false);\n  const [isLoadingComplete, setIsLoadingComplete] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [loadingMessage, setLoadingMessage] = useState(\"Initializing Artiverse...\");\n\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  useEffect(() => {\n    if (!isMounted) return;\n\n    let progressTimer: NodeJS.Timeout;\n    let messageTimer: NodeJS.Timeout;\n    let navigationTimer: NodeJS.Timeout;\n\n    if (!isLoadingComplete) {\n      progressTimer = setInterval(() => {\n        setProgress(oldProgress => {\n          if (oldProgress >= 100) {\n            clearInterval(progressTimer);\n            return 100;\n          }\n          const diff = Math.random() * 10;\n          return Math.min(oldProgress + diff, 100);\n        });\n      }, PROGRESS_UPDATE_INTERVAL);\n\n      const messages = [\n          \"Polishing Pixels...\",\n          \"Connecting to the Metaverse...\",\n          \"Unveiling Masterpieces...\",\n          \"Sparking Creativity...\",\n          \"Almost There!\"\n        ];\n      let messageIndex = 0;\n      setLoadingMessage(messages[messageIndex]); \n      messageTimer = setInterval(() => {\n        messageIndex = (messageIndex + 1) % messages.length;\n        setLoadingMessage(messages[messageIndex]);\n      }, SPLASH_DURATION / messages.length);\n\n      navigationTimer = setTimeout(() => {\n        clearInterval(progressTimer);\n        clearInterval(messageTimer);\n        setProgress(100);\n        setLoadingMessage(\"Welcome!\");\n        setIsLoadingComplete(true); \n      }, SPLASH_DURATION);\n    }\n\n    return () => {\n      clearInterval(progressTimer);\n      clearInterval(messageTimer);\n      clearTimeout(navigationTimer);\n    };\n  }, [isMounted, isLoadingComplete]);\n\n  useEffect(() => {\n    if (isLoadingComplete && isMounted) {\n      router.push('/welcome');\n    }\n  }, [isLoadingComplete, isMounted, router]);\n\n  if (!isMounted) {\n    // Minimal loader for pre-mount phase\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-screen bg-rainbow-swirl text-white p-4\">\n        <ArtNFTLogo size=\"large\" className=\"text-white\" />\n        <p className=\"mt-4 text-xl font-medium\">Loading ArtNFT...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-rainbow-swirl text-white p-4 overflow-hidden relative\">\n      {/* Ripple Container */}\n      <div className=\"absolute inset-0 flex items-center justify-center pointer-events-none\">\n        <div className=\"relative w-1 h-1\"> {/* Center point for ripples */}\n          <div className=\"ripple\" style={{ width: '200px', height: '200px', animationDelay: '0s' }}></div>\n          <div className=\"ripple\" style={{ width: '200px', height: '200px', animationDelay: '1s' }}></div>\n          <div className=\"ripple\" style={{ width: '200px', height: '200px', animationDelay: '2s' }}></div>\n        </div>\n      </div>\n\n      <div className=\"text-center space-y-8 relative z-10\"> {/* Ensure content is above ripples */}\n        <div className=\"absolute -top-16 -left-16 opacity-30\">\n          <Sparkles className=\"h-32 w-32 text-white/70 animate-pulse\" />\n        </div>\n        <div className=\"absolute -bottom-16 -right-16 opacity-30\">\n          <Sparkles className=\"h-32 w-32 text-white/70 animate-pulse delay-500\" />\n        </div>\n        \n        <div className=\"relative z-10\">\n          <ArtNFTLogo size=\"large\" className=\"text-white animate-pulse-slow mb-4\" />\n          <p className=\"text-xl font-light tracking-wider\">\n            Discover, Create, and Trade Digital Art.\n          </p>\n        </div>\n\n        <div className=\"w-full max-w-xs md:max-w-sm space-y-3 relative z-10\">\n          {!isLoadingComplete ? (\n            <>\n              <Progress value={progress} className=\"w-full h-2 bg-white/20 [&>div]:bg-gradient-to-r [&>div]:from-white/70 [&>div]:to-white transition-all duration-150 ease-linear\" />\n              <p className=\"text-sm text-white/80 min-h-[20px]\">{loadingMessage}</p>\n            </>\n          ) : (\n            <Loader2 className=\"h-8 w-8 text-white animate-spin mx-auto\" />\n          )}\n        </div>\n      </div>\n      <style jsx global>{`\n        @keyframes pulse-slow {\n          0%, 100% { opacity: 0.8; transform: scale(0.98); }\n          50% { opacity: 1; transform: scale(1.02); }\n        }\n        .animate-pulse-slow {\n          animation: pulse-slow 3s infinite ease-in-out;\n        }\n      `}</style>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}